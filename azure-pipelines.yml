# ##########
#
# A basic build against a single Python target
#
# The Azure Pipelines hierarchy goes [Pipeline] -> [Stages] -> [Jobs] -> [Steps]
# We only have 1 Stage and 1 Job, so we're using the shortcut syntax that includes only the properties for a single Job
#
# ##########

# We'll define some variables for later use
variables:
  pythonVersion: 3.7
  srcDirectory: src/$(System.DefaultWorkingDirectory)
  testsDirectory: tests/$(System.DefaultWorkingDirectory)

# Trigger only when simple_package or its build has been modified
trigger:
  branches:
    include:
      - "*"       # We're only uploading to build artifacts, so it's safe to trigger on a

# Run on a Microsoft-hosted agent running Ubuntu-16.04
# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
pool:
  vmImage: ubuntu-latest

stages:
  -stage: build
  # Use a specific Python version
  - task: UsePythonVersion@0
    displayName: 'Use Python $(pythonVersion)'
    inputs:
      versionSpec: '$(pythonVersion)'

  # Install some tools needed for build (flake8, etc)
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  -stage: Static code analytics
  # Lint via flake8. flake8 has better discovery, so we can invoke it directly
  - script: |
      python -m pip install flake8
      flake8
    displayName: "Linting: flake8"
    workingDirectory: $(srcDirectory)

  -stage: Unit test
  # Run unittests
  - script: |
      pip install pytest pytest-azurepipelines
      pip install pytest-cov
      pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
    displayName: 'pytest'
    workingDirectory: $(testsDirectory)


